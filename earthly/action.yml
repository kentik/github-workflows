name: 'Earthly run'
description: 'Run earthly setting it up first'
inputs:
  earthly_target:
    description: 'Earthly target to run'
    required: true
  earthly_multi_target:
    description: 'Earthly multi platform target to run'
    required: false
  build_multi:
    description: 'Should build multi platform targets'
    required: false
    default: 'false'
  github_token:
    description: 'Token to use for calling github'
    required: false
  earthly_version:
    description: 'Earthly version to use'
    required: false
    default: 0.6.6

runs:
  using: "composite"

  steps:
    - name: Set up GCP credentials
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: "projects/70880649570/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
        service_account: "svc-github-action@kentik-continuous-delivery.iam.gserviceaccount.com"

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.3.0

    - name: Configure docker
      shell: bash
      run: gcloud auth configure-docker

    - uses: earthly/actions/setup-earthly@v1
      with:
        version: v${{ inputs.earthly_version }}

    - name: Put back the git branch into git and setup Earthly variables
      env:
        MULTI_ENFORCED: ${{ contains(github.event.pull_request.body, '+multi') }}
        PUSH_MULTI: ${{
            inputs.build_multi == 'true' &&
            (
                contains(github.event.pull_request.body, '+multi') ||
                contains('
                  refs/heads/master
                  refs/heads/main
                ', github.ref)
            )
          }}
      shell: bash
      run: |
        echo "Setting variables for Earthly"
        branch=""
        if [ -n "$GITHUB_HEAD_REF" ]; then
          branch="$GITHUB_HEAD_REF"
        else
          branch="${GITHUB_REF##*/}"
        fi
        git checkout -b "$branch" || true
        # copy/paste from https://github.com/kentik/kentik-build-tools/blob/master/lib/lib.sh#L207
        function kbt_sanitize() {
             local input="$@"
             local output=${input//[ _=+\/]/-}
             output=${output//[^a-zA-Z0-9\-]/}
             output=`builtin echo -n $output | sed 's/^-*//' | sed 's/-*$//' | tr A-Z a-z`
             builtin echo ${output}
        }
        echo "SANITIZED_BRANCH=$(kbt_sanitize $branch)" >> $GITHUB_ENV

        if [ "$PUSH_MULTI" == 'true' ]; then
          echo "Will build multi platform target"
          echo "EARTHLY_TARGET=${{ inputs.earthly_multi_target }}" >> $GITHUB_ENV
          echo "PUSH_MULTI=true" >> $GITHUB_ENV
        else
          echo "Will build single platform target"
          echo "EARTHLY_TARGET=${{ inputs.earthly_target }}" >> $GITHUB_ENV
        fi

    - uses: docker/setup-qemu-action@v1
      if: ${{ env.PUSH_MULTI == 'true' }}
      with:
        image: tonistiigi/binfmt:latest
        platforms: all

    - name: Build docker images
      shell: bash
      env:
        GIT_USERNAME: user_token
        GIT_PASSWORD: ${{ inputs.github_token }}
        EARTHLY_ALLOW_PRIVILEGED: 'true'
        EARTHLY_VERBOSE: ${{ contains(github.event.pull_request.body, '+debug') }}
      run: |
        echo "earthly --push --strict $EARTHLY_TARGET --RUN_ID=$GITHUB_RUN_NUMBER --SANITIZED_BRANCH=$SANITIZED_BRANCH"
        earthly --push --strict $EARTHLY_TARGET --RUN_ID=$GITHUB_RUN_NUMBER --SANITIZED_BRANCH=$SANITIZED_BRANCH
